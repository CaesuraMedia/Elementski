#!/usr/bin/perl -w
use strict;
use CGI;
use Carp;
$|++;
print CGI::header();

=pod

=head1 NAME

ping.cgi - reads the download counter file generated by L<WebService::Freesound>->download and returns it to the javascript.

=cut

my $VERSION = '0.01';

=head1 SYNOPSIS

This is a callback from a javascript Ajax call to poll the
counter file looking for download progress. The responses
from here go to make a progress bar in css.

=cut

my $cgi_query = CGI->new;

if ( $cgi_query->param('id') ) {

    my $freesound_id = $cgi_query->param('id');
    my $counter_file
        = "/var/www/elementski/downloads/counter_$freesound_id.txt";

    if ( -f $counter_file ) {

        open my $fh, '<', $counter_file
            or croak "Cannot read provided counter_file for reading : $!";
        my $file_counts = <$fh>;
        close $fh;

        # Outputs to javascript ajax call "778768:921280:84"
        # ie 84% of 921280 bytes.
        #
        print $file_counts; # outputs to javascript ajax call "778768:921280:84"

    }
    else {

        # Maybe the counter file hasn't been created yet, so it sits at
        # 0%.
        #
        print "0:0:0";
    }
}
else {

    # This may get put into a error box somewhere on the page.
    #
    print "CGI-Error:CGI-Error:CGI-Error";
}

=head1 ACKNOWLEDGEMENTS

Kirsle : https://www.kirsle.net/blog/entry/simple-perl-uploader-with-progress-bar.

=head1 LICENSE AND COPYRIGHT

Copyright 2016 Andy Cragg.

This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:

L<http://www.perlfoundation.org/artistic_license_2_0>

=cut

